from src.services.yandex_metrika import YandexMetrikaAPI
import pandas as pd
from datetime import datetime, timedelta

def test_metrika_connection():
    """
    –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è –∫ –Ø–Ω–¥–µ–∫—Å.–ú–µ—Ç—Ä–∏–∫–µ –∏ –ø–æ–ª—É—á–µ–Ω–∏–µ –æ—Å–Ω–æ–≤–Ω—ã—Ö –æ—Ç—á–µ—Ç–æ–≤
    """
    # –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –∫–ª–∏–µ–Ω—Ç–∞
    token = 'y0_AgAAAAAIQVdQAAzyygAAAAEcFYUiAACbs5T2SZBAtbCrBXrF7T-3NHSfVw'
    counter_id = 26416359
    
    try:
        metrika = YandexMetrikaAPI(token, counter_id)
        print("‚úÖ –ü–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∫ API —É—Å–ø–µ—à–Ω–æ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–æ")
        
        # 1. –ü–æ–ª—É—á–µ–Ω–∏–µ –¥–∞–Ω–Ω—ã—Ö –ø–æ –∏—Å—Ç–æ—á–Ω–∏–∫–∞–º —Ç—Ä–∞—Ñ–∏–∫–∞
        print("\nüìä –ü–æ–ª—É—á–∞–µ–º –¥–∞–Ω–Ω—ã–µ –ø–æ –∏—Å—Ç–æ—á–Ω–∏–∫–∞–º —Ç—Ä–∞—Ñ–∏–∫–∞...")
        traffic_sources = metrika.get_traffic_sources(date1='30daysAgo', date2='today')
        print("\n–¢–æ–ø –∏—Å—Ç–æ—á–Ω–∏–∫–∏ —Ç—Ä–∞—Ñ–∏–∫–∞:")
        print(traffic_sources.sort_values('visits', ascending=False).head())
        
        # 2. –ü–æ–ª—É—á–µ–Ω–∏–µ –ø–æ–ø—É–ª—è—Ä–Ω—ã—Ö —Å—Ç—Ä–∞–Ω–∏—Ü
        print("\nüìë –ü–æ–ª—É—á–∞–µ–º –¥–∞–Ω–Ω—ã–µ –ø–æ –ø–æ–ø—É–ª—è—Ä–Ω—ã–º —Å—Ç—Ä–∞–Ω–∏—Ü–∞–º...")
        popular_pages = metrika.get_popular_pages(date1='30daysAgo', date2='today', limit=5)
        print("\n–¢–æ–ø-5 –ø–æ–ø—É–ª—è—Ä–Ω—ã—Ö —Å—Ç—Ä–∞–Ω–∏—Ü:")
        print(popular_pages[['url', 'visits']])
        
        # 3. –ü–æ–ª—É—á–µ–Ω–∏–µ –¥–∞–Ω–Ω—ã—Ö –ø–æ —É—Å—Ç—Ä–æ–π—Å—Ç–≤–∞–º
        print("\nüì± –ü–æ–ª—É—á–∞–µ–º –¥–∞–Ω–Ω—ã–µ –ø–æ —É—Å—Ç—Ä–æ–π—Å—Ç–≤–∞–º...")
        devices = metrika.get_devices(date1='30daysAgo', date2='today')
        print("\n–°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –ø–æ —É—Å—Ç—Ä–æ–π—Å—Ç–≤–∞–º:")
        print(devices)
        
        # 4. –ü–æ–ª—É—á–µ–Ω–∏–µ –ø–æ–∏—Å–∫–æ–≤—ã—Ö —Ñ—Ä–∞–∑
        print("\nüîç –ü–æ–ª—É—á–∞–µ–º –¥–∞–Ω–Ω—ã–µ –ø–æ –ø–æ–∏—Å–∫–æ–≤—ã–º —Ñ—Ä–∞–∑–∞–º...")
        search_phrases = metrika.get_search_phrases(date1='30daysAgo', date2='today', limit=10)
        print("\n–¢–æ–ø-10 –ø–æ–∏—Å–∫–æ–≤—ã—Ö —Ñ—Ä–∞–∑:")
        print(search_phrases)
        
        # –°–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ –æ—Ç—á–µ—Ç–æ–≤
        print("\nüíæ –°–æ—Ö—Ä–∞–Ω—è–µ–º –æ—Ç—á–µ—Ç—ã...")
        
        # –°–æ–∑–¥–∞–µ–º –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏—é –¥–ª—è –æ—Ç—á–µ—Ç–æ–≤ –µ—Å–ª–∏ –µ—ë –Ω–µ—Ç
        import os
        os.makedirs('reports', exist_ok=True)
        
        metrika.save_report(traffic_sources, 'reports/traffic_sources.xlsx')
        metrika.save_report(popular_pages, 'reports/popular_pages.xlsx')
        metrika.save_report(devices, 'reports/devices.xlsx')
        metrika.save_report(search_phrases, 'reports/search_phrases.xlsx')
        
        print("\n‚úÖ –í—Å–µ –æ—Ç—á–µ—Ç—ã —É—Å–ø–µ—à–Ω–æ —Å–æ—Ö—Ä–∞–Ω–µ–Ω—ã –≤ –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏–∏ 'reports'")
        
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞: {str(e)}")

if __name__ == "__main__":
    test_metrika_connection()

import requests
from datetime import datetime, timedelta

class CvetyCRM:
    """
    –ö–ª–∞—Å—Å –¥–ª—è —Ä–∞–±–æ—Ç—ã —Å API CRM cvety.kz
    """
    def __init__(self, access_token, base_url="https://cvety.kz/local"):
        self.access_token = access_token
        self.base_url = base_url
        
    def _make_request(self, endpoint, method='GET', params=None, data=None):
        """
        –í—ã–ø–æ–ª–Ω–µ–Ω–∏–µ –∑–∞–ø—Ä–æ—Å–∞ –∫ API
        """
        url = f"{self.base_url}{endpoint}"
        
        # –î–æ–±–∞–≤–ª—è–µ–º access_token –∫ –ø–∞—Ä–∞–º–µ—Ç—Ä–∞–º –∑–∞–ø—Ä–æ—Å–∞
        if params is None:
            params = {}
        params['access_token'] = self.access_token
        
        print(f"–ó–∞–ø—Ä–æ—Å –∫: {url}")  # –î–ª—è –æ—Ç–ª–∞–¥–∫–∏
        print(f"–ü–∞—Ä–∞–º–µ—Ç—Ä—ã: {params}")  # –î–ª—è –æ—Ç–ª–∞–¥–∫–∏
        
        response = requests.request(
            method=method,
            url=url,
            params=params,
            json=data
        )
        response.raise_for_status()
        return response.json()
    
    def get_orders(self, limit=20, offset=1, filters=None):
        """
        –ü–æ–ª—É—á–µ–Ω–∏–µ —Å–ø–∏—Å–∫–∞ –∑–∞–∫–∞–∑–æ–≤
        """
        params = {
            'limit': limit,
            'offset': offset,
            'filter': filters or []
        }
        return self._make_request('/order/order-list', params=params)
    
    def get_order_details(self, order_id):
        """
        –ü–æ–ª—É—á–µ–Ω–∏–µ –¥–µ—Ç–∞–ª—å–Ω–æ–π –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –ø–æ –∑–∞–∫–∞–∑—É
        """
        params = {
            'orderId': order_id
        }
        return self._make_request('/order/order-id/', params=params)
    
    def get_order_statuses(self):
        """
        –ü–æ–ª—É—á–µ–Ω–∏–µ —Å–ø–∏—Å–∫–∞ —Å—Ç–∞—Ç—É—Å–æ–≤ –∑–∞–∫–∞–∑–æ–≤
        """
        return self._make_request('/order/status-order/')

if __name__ == "__main__":
    # –¢–µ—Å—Ç–∏—Ä—É–µ–º –ø–æ–¥–∫–ª—é—á–µ–Ω–∏–µ
    crm = CvetyCRM('ABE7142D-D8AB-76AF-8D6C-2C4FAEA9B144')
    try:
        # –ü–æ–ª—É—á–∞–µ–º —Å–ø–∏—Å–æ–∫ —Å—Ç–∞—Ç—É—Å–æ–≤
        print("\nüìã –°—Ç–∞—Ç—É—Å—ã –∑–∞–∫–∞–∑–æ–≤:")
        statuses = crm.get_order_statuses()
        print(statuses)
        
        # –ü–æ–ª—É—á–∞–µ–º –∑–∞–∫–∞–∑—ã
        print("\nüì¶ –ó–∞–∫–∞–∑—ã:")
        orders = crm.get_orders()
        print(f"–ö–æ–ª–∏—á–µ—Å—Ç–≤–æ –∑–∞–∫–∞–∑–æ–≤: {len(orders) if isinstance(orders, list) else '–ù/–î'}")
        print("\n–ü–µ—Ä–≤—ã–µ –Ω–µ—Å–∫–æ–ª—å–∫–æ –∑–∞–∫–∞–∑–æ–≤:")
        if isinstance(orders, list):
            for order in orders[:5]:
                print(f"\n–ó–∞–∫–∞–∑ #{order.get('id', '–ù/–î')}:")
                print(f"–°—Ç–∞—Ç—É—Å: {order.get('status', '–ù/–î')}")
                print(f"–°—É–º–º–∞: {order.get('total', '–ù/–î')} —Ç–≥")
    
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞: {str(e)}")
